<?xml version="1.0" encoding="utf-8"?>

<launch>

	<!-- GAZEBO ARGUMENTS -->
	
	<!-- Run Gazebo headless -->
	<arg name="headless"                              default="false"/>
	<!-- Model path -->
	<arg name="model_path"                            default="$(find smb_highlevel_controller)/models"/>
	<arg name="robot_namespace"                       default=""/>
	<arg name="robot_model_name"                      default="smb"/>
	<arg name="enable_ekf"                            default="true"/>
	
	<!-- Name of the world -->
	<arg name="world"                                 default="testWorld"/>
	<!-- Path to the world file -->
	<arg name="world_file"                            default="$(find smb_highlevel_controller)/worlds/$(arg world).world"/>
	<arg name="laser_enabled"						  default="true"/>
	<arg name="map_file"       						  default="$(find smb_highlevel_controller)/maps/mapa.yaml"/>
	
	<!-- Set the initial pose of the robot's main body -->
	<arg name="x"                                     default="13.0"/>
	<arg name="y"                                     default="6.0"/>
	<arg name="z"                                     default="0.8"/>
	<arg name="roll"                                  default="0.0"/>
	<arg name="pitch"                                 default="0.0"/>
	<arg name="yaw"                                   default="0.0"/>
	<!-- Start paused -->
	<arg name="paused"                                default="false"/>
	<!-- Use simulation clock -->
	<arg name="use_sim_time"                          default="true"/>
	<!-- Debug mode -->
	<arg name="debug"                                 default="false"/>
	<!-- Verbose mode -->
	<arg name="verbose"                               default="true"/>
	
	<arg name="laser_scan_min_height"                  default="0.0"/>
	<arg name="laser_scan_max_height"                  default="0.1"/>
	
	<!-- GUI ARGUMENTS -->
	<!-- Enable/disable Gazebo GUI -->
	<arg name="run_gui"                               default="true"/>
	
	<!-- ROBOT ARGUMENTS -->
	<!-- Name of the robot description parameter -->
	<arg name="robot_description" default="/robot_description"/>
	
	<!-- Mapping -->
	<node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)">
		<param name="frame_id" value="map"/>
	</node>
	
	<!-- Transformacoes >
	<node pkg="tf2" type="static_transform_publisher" name="odom_to_map" 
	args="0.0 0.0 0.0 0 0 0 odom map 100" />
	
	<node pkg="tf2" type="static_transform_publisher" name="map_to_base_link"
	args="0.0 0 0.0 0 0 0  map /base_link 100" />
	
	<node pkg="tf2" type="static_transform_publisher" name="base_link_to_rslidar_base_link"
	args="0.0 0 0.0 0 0 0  /base_link /rslidar_base_link 100" / -->
	
	<!-- AMCL -->
	<node pkg="amcl" type="amcl" name="amcl" output="screen">
		<remap from="scan" to="rslidar_points"/>
		<param name="min_particles"             value="1000"/>
		<param name="max_particles"             value="20000"/>
		<param name="kld_err"                   value="0.2"/>
		<param name="resample_interval"         value="1"/>
		<param name="transform_tolerance"       value="0.01"/>
		<param name="recovery_alpha_slow"       value="0.00"/>
		<param name="recovery_alpha_fast"       value="0.00"/>
		<param name="initial_pose_x"            value="0.0"/>
		<param name="initial_pose_y"            value="0.0"/>
		<param name="initial_pose_a"            value="0.0"/>
		<param name="gui_publish_rate"          value="50.0"/>
		
		
		<param name="odom_model_type"           value="diff"/>
		<param name="odom_alpha1"               value="0.2"/>
		<param name="odom_alpha2"               value="0.2"/>
		<param name="odom_alpha3"               value="0.2"/>
		<param name="odom_alpha4"               value="0.2"/>
		<param name="odom_frame_id"             value="odom"/>
		<param name="base_frame_id"             value="base_link"/>
		<param name="global_frame_id"           value="map"/>
		<param name="tf_broadcast"              value="true"/>
		<param name="update_min_d" 				value="0.1"/>
		<param name="update_min_a" 				value="0.1"/>
	</node>
	
	<!-- Load Gazebo world -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<env name="GAZEBO_MODEL_PATH" 			value="$(arg model_path)"/>
		<arg name="world_name"        			value="$(arg world_file)"/>
		<arg name="paused"            			value="$(arg paused)"/>
		<arg name="use_sim_time"      			value="$(arg use_sim_time)"/>
		<arg name="gui"               			value="$(arg run_gui)"/>
		<arg name="headless"          			value="$(arg headless)"/>
		<arg name="debug"             			value="$(arg debug)"/>
		<arg name="verbose"           			value="$(arg verbose)"/>
	</include>
	
	<!-- Spawn robot in Gazebo -->
	<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"	args="-param $(arg robot_description) -urdf -model $(arg robot_model_name) -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)" output="screen"/>
	
	<!-- state_publisher -->
	<node pkg="robot_state_publisher" type="robot_state_publisher" name="rob_st_pub" >
		<remap from="robot_description" to="robot_description" />
		<remap from="joint_states" to="joint_states" />
	</node>
	
	<!-- smb_control -->
	<include file="$(find smb_control)/launch/control.launch">
		<arg name="simulation"      default="true"/>
		<arg name="robot_namespace"     default="$(arg robot_namespace)"/>
		<arg name="robot_description"   default="$(arg robot_description)"/>
		<arg name="enable_ekf"          default="$(arg enable_ekf)" />
	</include>
	
	<!-- rviz -->
	<node type="rviz" name="rviz" pkg="rviz" required="true" args="-d $(find smb_highlevel_controller)/rviz/smb_navigation.rviz"/>
	
	<!-- a_estrela -->
	<node pkg='smb_highlevel_controller' type="a_star.py" name="a_star" output="screen">
		<rosparam command="load" file="$(find smb_highlevel_controller)/config/config_a_estrela.yaml"></rosparam> <!--Arquivo de parametros-->
	</node>
	
	<!-- smb_highlevel_controller -->
	<node pkg='smb_highlevel_controller' type="smb_highlevel_controller" name="smb_highlevel_controller" output="screen">
		<rosparam command="load" file="$(find smb_highlevel_controller)/config/param.yaml"></rosparam> <!--Arquivo de parametros-->
	</node>

</launch>
	
